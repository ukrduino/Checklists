//
//  AllListsViewController.swift
//  Checklists
//
//  Created by Sergey Romaniuk on 21.01.15.
//  Copyright (c) 2015 Sergey Romaniuk. All rights reserved.
//



import UIKit

// —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–µ–∫–ª–∏—Å—Ç–æ–≤
// –¥–æ–±–∞–≤–ª—è–µ—Ç, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —á–µ–∫–ª–∏—Å—Ç—ã –≤—ã–∑—ã–≤–∞—è ListDetailViewController
// —É–¥–∞–ª—è–µ—Ç —á–µ–∫–ª–∏—Å—Ç—ã –∏–∑ DataModel.lists
//
class AllListsViewController: UITableViewController, ListDetailViewControllerDelegate, UINavigationControllerDelegate{

// –ü–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ AppDelegate —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ DataModel
    var dataModel: DataModel!
    
    override func viewDidLoad() {
        super.viewDidLoad()

    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
// –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –Ω–∞ —Ç–æ—Ç —á–µ–∫–ª–∏—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –æ—Ç–∫—Ä—ã—Ç –ø—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    override func viewDidAppear(animated: Bool) {
        super.viewDidAppear(animated)
        navigationController?.delegate = self
        let index = dataModel.indexOfSelectedChecklist
            if index >= 0 && index < dataModel.lists.count {
                let checklist = dataModel.lists[index]
                performSegueWithIdentifier("ShowChecklist", sender: checklist)
            }
        tableView.reloadData()
    }
    
// —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∏—Å–∫–æ–≤
    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

        return dataModel.lists.count
    }

// –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —è—á–µ–π–∫–∏
    override func tableView(tableView: UITableView,
        cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        let cellIdentifier = "Cell"
        let checklist = dataModel.lists[indexPath.row]
        var cell: UITableViewCell! = tableView.dequeueReusableCellWithIdentifier(cellIdentifier) as? UITableViewCell
        if cell == nil {cell = UITableViewCell(style: .Subtitle, reuseIdentifier: cellIdentifier)
        }
        cell.textLabel!.text = checklist.name
        cell.accessoryType = .DetailDisclosureButton
        cell.imageView!.image = UIImage(named: checklist.iconName)
        let itemsCount = checklist.items.count
            if itemsCount == 0 {
                cell.detailTextLabel!.text = "Empty list üòï"
            }
            else{
                let countRemaining = checklist.countUncheckedItems()
                if countRemaining == 0 {
                    cell.detailTextLabel!.text = "All Done! üòÉ"
                }
                else{
                    cell.detailTextLabel!.text = "\(countRemaining) Remaining"
                }
            }
        return cell
    }

// –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ø–∏—Å–æ–∫
    override func tableView(tableView: UITableView,
        didSelectRowAtIndexPath indexPath: NSIndexPath) {
        // —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω–¥–µ–∫—Å–∞ —Å–ø–∏—Å–∫–∞ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥–∏–º (–¥–ª—è –ø–æ–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –µ–≥–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ)
        dataModel.indexOfSelectedChecklist = indexPath.row
        let checklist = dataModel.lists[indexPath.row]
        performSegueWithIdentifier("ShowChecklist", sender: checklist)
            
            
    }
    
// –ë—É–¥—É—á–∏ –¥–µ–ª–µ–≥–∞—Ç–æ–º (UINavigationControllerDelegate) –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ —Å —á–µ–∫–ª–∏—Å—Ç–∞ –Ω–∞ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ —á–µ–∫–ª–∏—Å—Ç–æ–≤...
    func navigationController(navigationController: UINavigationController,
                willShowViewController viewController: UIViewController,
                animated: Bool) {
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º (–≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è) –∏–º–µ–Ω–Ω–æ –Ω–∞ AllListsViewController —Ç.–µ. self
        if viewController === self {
            // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å —Å–ø–∏—Å–∫–∞ —Ä–∞–≤–Ω—ã–π -1
            dataModel.indexOfSelectedChecklist = -1
        }
    }
    
// –£–¥–∞–ª–µ–Ω–∏–µ —á–µ–∫–ª–∏—Å—Ç–∞ (Swipe to Delete)
    override func tableView(tableView: UITableView,
        commitEditingStyle editingStyle: UITableViewCellEditingStyle,
        forRowAtIndexPath indexPath: NSIndexPath) {
        dataModel.lists.removeAtIndex(indexPath.row)
        let indexPaths = [indexPath]
        tableView.deleteRowsAtIndexPaths(indexPaths,
            withRowAnimation: .Automatic)
}
// –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ (Segue)
    override func prepareForSegue(segue: UIStoryboardSegue,
        sender: AnyObject!) {
            // –µ—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —á–µ–∫–ª–∏—Å—Ç–∞
        if segue.identifier == "ShowChecklist" {
            let controller = segue.destinationViewController as ChecklistsViewController
            // —Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º —á–µ–∫–ª–∏—Å—Ç (—Å —è—á–µ–π–∫–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–∂–∞–ª–∏) –≤ ChecklistsViewController –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            controller.checklist = sender as Checklist
        }  // –µ—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –¥–æ–±–∞–≤–∏—Ç—å —á–µ–∫–ª–∏—Å—Ç (—Å –∫–Ω–æ–ø–∫–∏ –ø–ª—é—Å)
        else if segue.identifier == "AddChecklist" {
            let navigationController = segue.destinationViewController
            as UINavigationController
            let controller = navigationController.topViewController
            as ListDetailViewController
            // —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –¥–µ–ª–µ–≥–∞—Ç–æ–º ListDetailViewController (–∏ –±—É–¥–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å –µ–≥–æ –∫–æ–º–∞–Ω–¥—ã —Å–º. 2 –º–µ—Ç–æ–¥–∞ –Ω–∏–∂–µ: listDetailViewControllerDidCancel, )
            controller.delegate = self
            controller.checklistToEdit = nil
        }
    }
    
// –º–µ—Ç–æ–¥—ã –¥–µ–ª–µ–≥–∞—Ç–∞ ListDetailViewController
    
// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ Cancel –≤ ListDetailViewController
    func listDetailViewControllerDidCancel(
        controller: ListDetailViewController) {
        dismissViewControllerAnimated(true, completion: nil)
    }

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ Done –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —á–µ–∫–ª–∏—Å—Ç–∞ –≤ ListDetailViewController
    func listDetailViewController(controller: ListDetailViewController,
        didFinishAddingChecklist checklist: Checklist) {
       dataModel.lists.append(checklist)
       dataModel.sortChecklists()
       tableView.reloadData()
       dismissViewControllerAnimated(true, completion: nil)
    }
    
// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ Done –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —á–µ–∫–ª–∏—Å—Ç–∞ –≤ ListDetailViewController
    func listDetailViewController(controller: ListDetailViewController,
        didFinishEditingChecklist checklist: Checklist) {
        dataModel.sortChecklists()
        tableView.reloadData()
        dismissViewControllerAnimated(true, completion: nil)
    }
    
    
// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è accessoryButtonTapped
    override func tableView(tableView: UITableView, accessoryButtonTappedForRowWithIndexPath indexPath: NSIndexPath) {
        // –ø–æ–ª—É—á–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å storyboardID = "ListNavigationController"...
        let navigationController = storyboard!.instantiateViewControllerWithIdentifier("ListNavigationController") as UINavigationController
        // –ø–æ–ª—É—á–∞–µ–º –∏–∑ –Ω–µ–≥–æ ListDetailViewController
        let controller = navigationController.topViewController as ListDetailViewController
        // —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –µ–≥–æ –¥–µ–ª–µ–≥–∞—Ç–æ–º
        controller.delegate = self
        // –ø–æ–ª—É—á–∞–µ–º —á–µ–∫–ª–∏—Å—Ç –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–æ—á–∫—É....
        let checklist = dataModel.lists[indexPath.row]
        // –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –≤ —Å–≤–æ–π—Å—Ç–≤–æ checklistToEdit
        controller.checklistToEdit = checklist
        presentViewController(navigationController, animated: true,
        completion: nil)
    }
    
}
